require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
# ← Force Git-based specs before CDN
source 'https://cdn.cocoapods.org/'

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']


platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'BoostArabia' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = [
      'node', '-e',
      "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"
    ]
  else
    config_command = [
      'node', '--no-warnings', '--eval',
      'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
      'react-native-config', '--json', '--platform', 'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'].nil? || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    # Standard RN post-install fixes
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true'
    )

    # Disable code signing on resource bundles (Xcode 14+)
    installer.target_installation_results.pod_target_installation_results.each do |pod_name, result|
      result.resource_bundle_targets.each do |bundle_target|
        bundle_target.build_configurations.each do |cfg|
          cfg.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end

    # Update C++ settings for compatibility with iOS 18
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |cfg|
        # Use c++20 instead of c++17
        cfg.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
        cfg.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        
        # Add preprocessor definition to enable removed C++17 features
        if cfg.build_settings['GCC_PREPROCESSOR_DEFINITIONS']
          cfg.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '_LIBCPP_ENABLE_CXX17_REMOVED_FEATURES=1'
        else
          cfg.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_FEATURES=1']
        end
      end
    end
  end
end